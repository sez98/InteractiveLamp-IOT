#include <SoftwareSerial.h>
#include <Servo.h>             //Servo library

Servo servo_test;        //initialize a servo object for the connected servo

int ledpin = 12;
int ldrpin = A0;   
char data = 0;
int Sensorvalue; 
int in = 7; 
const int trigPin = 3;
const int echoPin = 10;
long duration;
int distance; 
int state = HIGH;  
int r;           
int p = LOW;
int angle = 110;    
long time = 0;       
long debounce = 200;   
int currentAngle= 110;
SoftwareSerial Serial3(0,1);

void setup() 
{
  pinMode(ledpin,OUTPUT);
  servo_test.attach(9); 
  pinMode(in, INPUT);
  pinMode(ldrpin, INPUT); 
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600);
  Serial3.begin(38400);
}

void moveMotor(int angle){
  int curr = currentAngle;
  while(curr!=angle){
    if(curr<angle){
      curr++;
    }else{
      curr--;
    }
    servo_test.write(curr);
    delay(10);
  }
  currentAngle = angle;
}

void bluetooth(int data){  
  if(data == 'a')
  {
    digitalWrite(ledpin, HIGH);
  }
  if(data == 'b')
  {
    digitalWrite(ledpin, LOW);
  }
  if(data == 'l')
  {
    moveMotor(100);
  }
  if(data == 'r')
  {
    moveMotor(120);
  }
    if(data == 'n')
  {
    digitalWrite(ledpin, HIGH);
    delay(100);
    digitalWrite(ledpin, LOW);
    delay(100);
     digitalWrite(ledpin, HIGH);
    delay(100);
    digitalWrite(ledpin, LOW);
    delay(100);
  }
}

boolean Ultrasonic()
{       
  digitalWrite(trigPin, LOW);
  delay(200);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delay(100);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance= duration*0.034/2;
  // Prints the distance on the Serial Monitor
  if(distance < 15){
    digitalWrite(ledpin,HIGH);
    return true;
    delay(100);
    }
   else{
    digitalWrite(ledpin, LOW);
    return false;
    delay(100);
    }
}

boolean ldr()
{
    double ldrStatus = analogRead(ldrpin)+analogRead(ldrpin)+analogRead(ldrpin);
    ldrStatus = ldrStatus/3;//read the status of the LDR value  
    if (ldrStatus <= 300) {  
        analogWrite(ledpin,ldrStatus);  
        return true;
        Serial.println(ldrStatus);  
    }  
    else {  
        digitalWrite(ledpin, LOW); //turn LED off  
        return false;
        Serial.println("---------------");  
    }
}

boolean touch()
{
  r = digitalRead(in);
  if (r == HIGH && p == LOW && millis() - time > debounce) {
    if (angle == 110)
      angle = 130;
    else 
     angle = 110;
    time = millis();    
  }
  else
  {
    return false;
  }
  moveMotor(angle);
  return true;
  p = r;

}

void loop()
{
  if(Serial3.available())
  {
    data=char(Serial3.read());
    Serial.println(data);
    bluetooth(data);
  }

  if(Ultrasonic());
  else if(ldr());
  else if(touch()) ; 
}
